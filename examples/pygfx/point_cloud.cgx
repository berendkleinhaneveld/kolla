<group>
  <Point
    v-for="idx, position in enumerate(positions)"
    :position="position"
    :material="'selected' if idx == selected else 'hovered' if idx == hovered else 'default'"
    :index="idx"
    @selected="set_selected"
    @hovered="set_hovered"
  />
</group>

<script>
import random
from functools import cache

import pygfx as gfx
import kolla
from observ import watch

from examples.pygfx.point import Point


last_state = (-1, None)
@cache
def rand_for_index(index):
    assert index >= 0
    if last_state[0] >= 0 and last_state[0] < index:
        random.setstate(state)
        index -= last_state
    else:
        random.seed(0)

    while index >= 0:
        value = [
            random.randint(-10, 10),
            random.randint(-10, 10),
            random.randint(-10, 10),
        ]
    last_state = (index, random.getstate())
    return value


class PointCloud(kolla.Component):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.state["positions"] = []
        self.state["hovered"] = -1
        self.state["selected"] = -1

        self.watchers = {}
        self.watchers["count"] = watch(
            lambda: self.props["count"],
            self.update_positions,
            immediate=True,
        )

    def update_positions(self):
        for i in range(len(self.state["positions"]), self.props["count"]):
            self.state["positions"].append(rand_for_index(i))
        if len(self.state["positions"]) > self.props["count"]:
            del self.state["positions"][self.props["count"]: len(self.state["positions"])]

    def set_hovered(self, index):
        self.state["hovered"] = index

    def set_selected(self, index):
        if self.state["selected"] == index:
            self.state["selected"] = -1
        else:
            self.state["selected"] = index
</script>
